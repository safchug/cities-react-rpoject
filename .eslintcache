[{"/home/safchug/WebstormProjects/react-cities-project/src/index.js":"1","/home/safchug/WebstormProjects/react-cities-project/src/App.js":"2","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js":"3","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login.js":"4","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration.js":"5","/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js":"6","/home/safchug/WebstormProjects/react-cities-project/src/store/AuthService.js":"7","/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js":"8","/home/safchug/WebstormProjects/react-cities-project/src/utils/AxiosInstance.js":"9","/home/safchug/WebstormProjects/react-cities-project/src/models/User.js":"10","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/LoginForm.js":"11","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/CustomAlert.js":"12","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/RegistrationForm.js":"13","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/validation.js":"14","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js":"15","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js":"16","/home/safchug/WebstormProjects/react-cities-project/src/store/CitiesService.js":"17","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Loader/Loader.js":"18","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCityFrom/AddCityForm.js":"19","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js":"20","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js":"21","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js":"22","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCityFrom/UpdateCityForm.js":"23","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/NameItem.js":"24","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/LocationItem.js":"25","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/PopulationItem.js":"26","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/FoundItem.js":"27","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/AreaItem.js":"28","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CitiesButton.js":"29","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CityForm.js":"30","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CityFormLayout.js":"31","/home/safchug/WebstormProjects/react-cities-project/src/models/City.js":"32"},{"size":197,"mtime":1607422242320,"results":"33","hashOfConfig":"34"},{"size":938,"mtime":1607630228114,"results":"35","hashOfConfig":"34"},{"size":603,"mtime":1607676335012,"results":"36","hashOfConfig":"34"},{"size":865,"mtime":1607586532299,"results":"37","hashOfConfig":"34"},{"size":1208,"mtime":1607589098201,"results":"38","hashOfConfig":"34"},{"size":844,"mtime":1607696493941,"results":"39","hashOfConfig":"34"},{"size":2321,"mtime":1607621756461,"results":"40","hashOfConfig":"34"},{"size":108,"mtime":1607543483968,"results":"41","hashOfConfig":"34"},{"size":243,"mtime":1607544288770,"results":"42","hashOfConfig":"34"},{"size":206,"mtime":1607544057413,"results":"43","hashOfConfig":"34"},{"size":1009,"mtime":1607586532195,"results":"44","hashOfConfig":"34"},{"size":213,"mtime":1607586532175,"results":"45","hashOfConfig":"34"},{"size":2441,"mtime":1607599051697,"results":"46","hashOfConfig":"34"},{"size":914,"mtime":1607593476902,"results":"47","hashOfConfig":"34"},{"size":330,"mtime":1607608072420,"results":"48","hashOfConfig":"34"},{"size":1322,"mtime":1607621755933,"results":"49","hashOfConfig":"34"},{"size":3574,"mtime":1607699911400,"results":"50","hashOfConfig":"34"},{"size":306,"mtime":1607622713731,"results":"51","hashOfConfig":"34"},{"size":1068,"mtime":1607697123839,"results":"52","hashOfConfig":"34"},{"size":1348,"mtime":1607676276053,"results":"53","hashOfConfig":"34"},{"size":2371,"mtime":1607696959125,"results":"54","hashOfConfig":"34"},{"size":607,"mtime":1607676965748,"results":"55","hashOfConfig":"34"},{"size":1368,"mtime":1607699938439,"results":"56","hashOfConfig":"34"},{"size":299,"mtime":1607699911004,"results":"57","hashOfConfig":"34"},{"size":319,"mtime":1607699910996,"results":"58","hashOfConfig":"34"},{"size":329,"mtime":1607699911008,"results":"59","hashOfConfig":"34"},{"size":304,"mtime":1607699910988,"results":"60","hashOfConfig":"34"},{"size":299,"mtime":1607699910944,"results":"61","hashOfConfig":"34"},{"size":225,"mtime":1607685172877,"results":"62","hashOfConfig":"34"},{"size":829,"mtime":1607698776159,"results":"63","hashOfConfig":"34"},{"size":205,"mtime":1607685887876,"results":"64","hashOfConfig":"34"},{"size":299,"mtime":1607697123787,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"tp7qlt",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/safchug/WebstormProjects/react-cities-project/src/index.js",[],["144","145"],"/home/safchug/WebstormProjects/react-cities-project/src/App.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login.js",["146","147","148"],"import { Button, Col, Form, Input, Row } from \"antd\";\nimport { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useHistory } from \"react-router-dom\";\n\nimport StoreContext from \"../../store/StoreContext\";\nimport LoginFrom from \"../../Components/UI/LoginForm\";\n\nconst Login = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  const history = useHistory();\n\n  const submit = (e) => {\n    auth.login(e);\n  };\n\n  const goHome = () => {\n    console.log(\"go home has been called\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"login\">\n      <Row justify=\"center\" align=\"middle\">\n        <Col span=\"8\">\n          {auth.loginStatus === \"pending\" ? (\n            <LoginFrom submit={submit} />\n          ) : (\n            goHome()\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\nexport default Login;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/store/AuthService.js",["149"],"import {\n  makeObservable,\n  observable,\n  computed,\n  action,\n  runInAction,\n} from \"mobx\";\n\nimport axiosInstance from \"../utils/AxiosInstance\";\n\nclass AuthService {\n  registrationStatus = \"pending\"; // \"pending\", \"done\" or \"error\"\n  registrationResult = null;\n\n  loginStatus = \"pending\";\n  loginError = null;\n  user = null;\n\n  constructor() {\n    makeObservable(this, {\n      registrationStatus: observable,\n      registrationResult: observable,\n      register: action,\n\n      loginStatus: observable,\n      loginError: observable,\n      user: observable,\n      login: action,\n\n      checkUser: action,\n\n      logOut: action,\n    });\n  }\n\n  async register(data) {\n    try {\n      const response = await axiosInstance({\n        method: \"post\",\n        url: \"/registration\",\n        data,\n      });\n\n      runInAction(() => {\n        this.registrationStatus = \"done\";\n        this.registrationResult = response;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.registrationStatus = \"error\";\n        this.registrationResult = err;\n      });\n    }\n  }\n\n  async login(data) {\n    try {\n      const response = await axiosInstance({\n        method: \"post\",\n        url: \"/login\",\n        data,\n      });\n      const token = response.data.accessToken;\n      const { user } = response.data;\n\n      localStorage.setItem(\"accs_tkn\", token);\n\n      runInAction(() => {\n        this.loginStatus = \"done\";\n        this.user = user;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.loginStatus = \"error\";\n        this.loginError = err;\n      });\n    }\n  }\n\n  async checkUser() {\n    try {\n      const token = localStorage.getItem(\"accs_tkn\");\n      if (token) {\n        console.log(\"token exists\");\n        const response = await axiosInstance({\n          method: \"post\",\n          url: \"/auth\",\n          headers: { Authorization: `Bearer ${token}` },\n          body: {},\n        });\n\n        runInAction(() => {\n          this.user = response.data;\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (err) {\n      localStorage.removeItem(\"accs_tkn\");\n      runInAction(() => {\n        this.user = null;\n      });\n    }\n  }\n\n  logOut() {\n    this.loginStatus = \"pending\";\n    this.user = null;\n    localStorage.removeItem(\"accs_tkn\");\n  }\n}\n\nexport default AuthService;\n","/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/utils/AxiosInstance.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/models/User.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/LoginForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/CustomAlert.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/RegistrationForm.js",["150"],"import { useState } from \"react\";\nimport { Button, Col, Form, Input, Row } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport validation from \"./validation\";\nimport CustomAlert from \"../CustomAlert\";\n\nconst RegistrationFrom = ({ submit, error }) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n\n  const changeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const changeMail = (e) => {\n    setMail(e.target.value);\n  };\n\n  const changeBirthday = (e) => {\n    setBirthday(e.target.value);\n  };\n\n  const changePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const changeConfirm = (e) => {\n    setConfirm(e.target.value);\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const processError = () => {\n    let responseMsg = \"Something went wrong\";\n\n    if (error.response) {\n      responseMsg = error.response.data.message;\n    }\n\n    return <CustomAlert type=\"error\" message={responseMsg} />;\n  };\n\n  return (\n    <Form onFinish={submit} {...layout}>\n      {error && processError()}\n\n      <Form.Item name=\"name\" label=\"Full name\" rules={validation.name}>\n        <Input value={fullName} onChange={changeName} />\n      </Form.Item>\n      <Form.Item name=\"birthday\" label=\"Birthday\" rules={validation.birthday}>\n        <Input value={birthday} onChange={changeBirthday} />\n      </Form.Item>\n      <Form.Item name=\"mail\" label=\"E-mail\" rules={validation.mail}>\n        <Input value={mail} onChange={changeMail} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={validation.password}\n        hasFeedback\n      >\n        <Input.Password value={password} onChange={changePassword} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={validation.confirm}\n      >\n        <Input.Password value={confirm} onChange={changeConfirm} />\n      </Form.Item>\n\n      <Row justify=\"end\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Row>\n    </Form>\n  );\n};\n\nRegistrationFrom.propTypes = {\n  submit: PropTypes.func.isRequired,\n  error: PropTypes.object,\n};\n\nexport default RegistrationFrom;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/validation.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js",["151","152"],"import { observer } from \"mobx-react-lite\";\nimport { Layout, Menu } from \"antd\";\n\nimport CustomMenu from \"./CustomMenu\";\n\nconst { Header } = Layout;\n\nconst TopNavigation = () => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <CustomMenu />\n      </Header>\n    </Layout>\n  );\n};\n\nexport default TopNavigation;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js",["153"],"import { Menu } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext, useEffect, Fragment } from \"react\";\nimport StoreContext from \"../../store/StoreContext\";\n\nconst CustomMenu = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  useEffect(() => {\n    auth.checkUser();\n  }, []);\n\n  const logOut = (e) => {\n    auth.logOut();\n  };\n\n  return (\n    <Menu mode=\"horizontal\" theme=\"dark\">\n      <Menu.Item key=\"logo\">\n        <NavLink exact to=\"/\">\n          Cities Service\n        </NavLink>\n      </Menu.Item>\n      {auth.user ? (\n        <Fragment>\n          <Menu.Item key=\"logout\" className=\"menu_right\" onClick={logOut}>\n            Log out\n          </Menu.Item>\n          <Menu.Item key=\"user\" className=\"menu_right\">\n            {auth.user.name}\n          </Menu.Item>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Menu.Item key=\"login\" className=\"menu_right\">\n            <NavLink exact to=\"/login\">\n              Log in\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"logout\" className=\"menu_right\">\n            <NavLink exact to=\"/registration\">\n              Sign in\n            </NavLink>\n          </Menu.Item>\n        </Fragment>\n      )}\n    </Menu>\n  );\n});\n\nexport default CustomMenu;\n","/home/safchug/WebstormProjects/react-cities-project/src/store/CitiesService.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Loader/Loader.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCityFrom/AddCityForm.js",["154"],"import { Fragment, useContext } from \"react\";\n\nimport CityForm from \"../../../Components/UI/Cities/CityForm/CityForm\";\nimport CityFormLayout from \"../../../Components/UI/Cities/CityForm/CityFormLayout\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport City from \"../../../models/City\";\nimport CustomAlert from \"../../../Components/UI/CustomAlert\";\n\nimport \"./style.css\";\nimport { observer } from \"mobx-react-lite\";\n\nconst AddCityFrom = observer(() => {\n  const { cities } = useContext(StoreContext);\n\n  const submit = (e) => {\n    const city = new City(e.name, e.location, e.population, e.area, e.found);\n\n    cities.addCity(city);\n  };\n\n  return (\n    <CityFormLayout className=\"add_city_from\">\n      {cities.addCityStatus === \"done\" && (\n        <CustomAlert message=\"the city has been added successfuly!\" />\n      )}\n      {cities.addCityStatus === \"error\" && (\n        <CustomAlert message={cities.addCityError} type=\"error\" />\n      )}\n\n      <CityForm submit={submit} actionType=\"Add\" />\n    </CityFormLayout>\n  );\n});\n\nexport default AddCityFrom;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js",["155","156","157"],"import { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Col, Card, Row, Typography, Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../../Components/UI/Loader/Loader\";\n\nimport \"./style.css\";\n\nconst CitiesList = observer(() => {\n  const { Text } = Typography;\n\n  const { cities } = useContext(StoreContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    console.log(\"effect\");\n    cities.fetchCitiesList();\n  }, []);\n\n  const showInfo = (id) => {\n    history.push(`/city_info/${id}`);\n  };\n\n  return (\n    <Row gutter={[16, 16]}>\n      {cities.loading ? (\n        <Loader />\n      ) : (\n        cities.citiesList &&\n        cities.citiesList.map((city) => (\n          <Col span={8} className=\"gutter-row\">\n            <Card\n              title={city.name}\n              className=\"city_card\"\n              extra={\n                <Button type=\"primary\" onClick={showInfo.bind(null, city.id)}>\n                  {\" \"}\n                  More\n                </Button>\n              }\n            >\n              <Text mark>Population</Text>\n              {city.population}\n            </Card>\n          </Col>\n        ))\n      )}\n    </Row>\n  );\n});\n\nexport default CitiesList;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js",["158","159"],"import { Fragment, useContext, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Typography, Space, Button, Row, Col, Card } from \"antd\";\nimport { when } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\n\nimport StoreContext from \"../../../store/StoreContext\";\n\nimport \"./style.css\";\n\nconst { Text } = Typography;\n\nconst CityInfo = observer(() => {\n  const { cities, auth } = useContext(StoreContext);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const { city } = cities;\n\n  useEffect(() => {\n    cities.fetchCityById(id);\n  }, []);\n\n  const goHome = () => {\n    history.push(\"/\");\n  };\n\n  const goToUpdateFrom = () => {\n    history.push(`/update_from/${id}`);\n  };\n\n  const deleteCity = () => {\n    cities.deleteCity(id);\n  };\n\n  when(\n    () => cities.deleteCitySuccess,\n    () => {\n      history.push(\"/\");\n      cities.clearDeletingState();\n    }\n  );\n\n  return (\n    <div>\n      {city ? (\n        <Row justify=\"center\">\n          <Card title={city.name} className=\"city_info_card\">\n            <Col span={18}>\n              <Text mark>Location</Text>\n              {city.location}\n            </Col>\n\n            <Col span={18}>\n              <Text mark>Population </Text>\n              {city.population}\n            </Col>\n            <Col span={18}>\n              <Text mark>Area </Text>\n              {city.area}\n            </Col>\n            <Col span={8}>\n              <Text mark>Found </Text>\n              {city.found}\n            </Col>\n            <Col span={8}>\n              <Text mark>Created by:</Text>\n            </Col>\n            <Col span={8}>\n              <Text mark>Name:</Text>\n              {city.user.name}\n            </Col>\n            <Col span={8}>\n              <Text mark>Mail</Text> {city.user.mail}\n            </Col>\n\n            {auth.user && city.userId === auth.user.id && (\n              <Fragment>\n                <Button type=\"primary\" onClick={goToUpdateFrom}>\n                  Update\n                </Button>\n                <Button type=\"primary\" onClick={deleteCity}>\n                  Delete\n                </Button>\n              </Fragment>\n            )}\n            <Button type=\"primary\" onClick={goHome}>\n              Home\n            </Button>\n          </Card>\n        </Row>\n      ) : null}\n    </div>\n  );\n});\n\nexport default CityInfo;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCityFrom/UpdateCityForm.js",["160","161","162"],"import { useEffect, useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CityForm from \"../../../Components/UI/Cities/CityForm/CityForm\";\nimport CityFormLayout from \"../../../Components/UI/Cities/CityForm/CityFormLayout\";\n\nimport \"./style.css\";\nimport { observer } from \"mobx-react-lite\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport City from \"../../../models/City\";\nimport CustomAlert from \"../../../Components/UI/CustomAlert\";\n\nconst UpdateCityFrom = observer(() => {\n  const { cities } = useContext(StoreContext);\n\n  const initialState = new City(\"\", \"\", \"\", \"\", \"\");\n  const [city, setCity] = useState(initialState);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    cities.fetchCityById(id);\n  }, []);\n\n  const submit = (e) => {\n    const city = new City(e.name, e.location, e.population, e.area, e.found);\n\n    cities.updateCity(id, city);\n  };\n\n  return (\n    <CityFormLayout className=\"update_city_from\">\n      {cities.updateCityStatus === \"done\" && (\n        <CustomAlert message=\"The city has been successfuly updated\" />\n      )}\n      {cities.updateCityStatus === \"error\" && (\n        <CustomAlert message={cities.updateCityError} type=\"error\" />\n      )}\n\n      <CityForm submit={submit} actionType=\"Update\" data={cities.city} />\n    </CityFormLayout>\n  );\n});\n\nexport default UpdateCityFrom;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/NameItem.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/LocationItem.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/PopulationItem.js",[],["163","164"],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/FoundItem.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/AreaItem.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CitiesButton.js",["165"],"import { Button, Form, Row } from \"antd\";\n\nconst CitiesButton = ({ children }) => (\n  <Row justify=\"end\">\n    <Button type=\"primary\" htmlType=\"submit\">\n      {children}\n    </Button>\n  </Row>\n);\n\nexport default CitiesButton;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CityForm.js",["166"],"import { Form } from \"antd\";\n\nimport NameItem from \"./NameItem\";\nimport LocationItem from \"./LocationItem\";\nimport PopulationItem from \"./PopulationItem\";\nimport AreaItem from \"./AreaItem\";\nimport FoundItem from \"./FoundItem\";\nimport CitiesButton from \"./CitiesButton\";\n\nconst CityForm = ({ submit, actionType, data }) => {\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  return (\n    <Form onFinish={submit} {...layout}>\n      <NameItem value={data ? data.name : null} />\n      <LocationItem value={data ? data.location : null} />\n      <PopulationItem value={data ? data.population : null} />\n      <AreaItem value={data ? data.area : null} />\n      <FoundItem value={data ? data.found : null} />\n      <CitiesButton>{actionType}</CitiesButton>\n    </Form>\n  );\n};\n\nexport default CityForm;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Cities/CityForm/CityFormLayout.js",["167"],"import { Col, Row } from \"antd\";\n\nconst CityFormLayout = ({ children, className }) => (\n  <div className={className}>\n    <Row justify=\"center\">{children}</Row>\n  </div>\n);\n\nexport default CityFormLayout;\n","/home/safchug/WebstormProjects/react-cities-project/src/models/City.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":16},{"ruleId":"172","severity":1,"message":"176","line":1,"column":23,"nodeType":"174","messageId":"175","endLine":1,"endColumn":27},{"ruleId":"172","severity":1,"message":"177","line":1,"column":29,"nodeType":"174","messageId":"175","endLine":1,"endColumn":34},{"ruleId":"172","severity":1,"message":"178","line":4,"column":3,"nodeType":"174","messageId":"175","endLine":4,"endColumn":11},{"ruleId":"172","severity":1,"message":"179","line":2,"column":18,"nodeType":"174","messageId":"175","endLine":2,"endColumn":21},{"ruleId":"172","severity":1,"message":"180","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"172","severity":1,"message":"181","line":2,"column":18,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":12,"column":6,"nodeType":"184","endLine":12,"endColumn":8,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"172","severity":1,"message":"186","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"172","severity":1,"message":"187","line":1,"column":43,"nodeType":"174","messageId":"175","endLine":1,"endColumn":51},{"ruleId":"182","severity":1,"message":"188","line":19,"column":6,"nodeType":"184","endLine":19,"endColumn":8,"suggestions":"189"},{"ruleId":"172","severity":1,"message":"190","line":3,"column":22,"nodeType":"174","messageId":"175","endLine":3,"endColumn":27},{"ruleId":"182","severity":1,"message":"191","line":22,"column":6,"nodeType":"184","endLine":22,"endColumn":8,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"193","line":16,"column":10,"nodeType":"174","messageId":"175","endLine":16,"endColumn":14},{"ruleId":"172","severity":1,"message":"194","line":16,"column":16,"nodeType":"174","messageId":"175","endLine":16,"endColumn":23},{"ruleId":"182","severity":1,"message":"191","line":22,"column":6,"nodeType":"184","endLine":22,"endColumn":8,"suggestions":"195"},{"ruleId":"168","replacedBy":"196"},{"ruleId":"170","replacedBy":"197"},{"ruleId":"172","severity":1,"message":"176","line":1,"column":18,"nodeType":"174","messageId":"175","endLine":1,"endColumn":22},{"ruleId":"172","severity":1,"message":"198","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":17},{"ruleId":"172","severity":1,"message":"179","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Input' is defined but never used.","'computed' is defined but never used.","'Col' is defined but never used.","'observer' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'Fragment' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.",["202"],"'Space' is defined but never used.","React Hook useEffect has missing dependencies: 'cities' and 'id'. Either include them or remove the dependency array.",["203"],"'city' is assigned a value but never used.","'setCity' is assigned a value but never used.",["204"],["199"],["200"],"'LoginFrom' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},"Update the dependencies array to be: [auth]",{"range":"212","text":"213"},"Update the dependencies array to be: [cities]",{"range":"214","text":"215"},"Update the dependencies array to be: [cities, id]",{"range":"216","text":"217"},{"range":"218","text":"217"},[357,359],"[auth]",[584,586],"[cities]",[598,600],"[cities, id]",[764,766]]