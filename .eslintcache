[{"/home/safchug/WebstormProjects/react-cities-project/src/index.js":"1","/home/safchug/WebstormProjects/react-cities-project/src/App.js":"2","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js":"3","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login.js":"4","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration.js":"5","/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js":"6","/home/safchug/WebstormProjects/react-cities-project/src/store/AuthService.js":"7","/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js":"8","/home/safchug/WebstormProjects/react-cities-project/src/utils/AxiosInstance.js":"9","/home/safchug/WebstormProjects/react-cities-project/src/models/User.js":"10","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/LoginForm.js":"11","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/CustomAlert.js":"12","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/RegistrationForm.js":"13","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/validation.js":"14","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js":"15","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js":"16","/home/safchug/WebstormProjects/react-cities-project/src/store/CitiesService.js":"17","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Loader/Loader.js":"18","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCityFrom/AddCityForm.js":"19","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js":"20","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js":"21","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js":"22","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCityFrom/UpdateCityForm.js":"23"},{"size":197,"mtime":1607422242320,"results":"24","hashOfConfig":"25"},{"size":938,"mtime":1607630228114,"results":"26","hashOfConfig":"25"},{"size":603,"mtime":1607676335012,"results":"27","hashOfConfig":"25"},{"size":865,"mtime":1607586532299,"results":"28","hashOfConfig":"25"},{"size":1208,"mtime":1607589098201,"results":"29","hashOfConfig":"25"},{"size":840,"mtime":1607676965636,"results":"30","hashOfConfig":"25"},{"size":2321,"mtime":1607621756461,"results":"31","hashOfConfig":"25"},{"size":108,"mtime":1607543483968,"results":"32","hashOfConfig":"25"},{"size":243,"mtime":1607544288770,"results":"33","hashOfConfig":"25"},{"size":206,"mtime":1607544057413,"results":"34","hashOfConfig":"25"},{"size":1009,"mtime":1607586532195,"results":"35","hashOfConfig":"25"},{"size":213,"mtime":1607586532175,"results":"36","hashOfConfig":"25"},{"size":2441,"mtime":1607599051697,"results":"37","hashOfConfig":"25"},{"size":914,"mtime":1607593476902,"results":"38","hashOfConfig":"25"},{"size":330,"mtime":1607608072420,"results":"39","hashOfConfig":"25"},{"size":1322,"mtime":1607621755933,"results":"40","hashOfConfig":"25"},{"size":2236,"mtime":1607636555505,"results":"41","hashOfConfig":"25"},{"size":306,"mtime":1607622713731,"results":"42","hashOfConfig":"25"},{"size":2154,"mtime":1607676276033,"results":"43","hashOfConfig":"25"},{"size":1348,"mtime":1607676276053,"results":"44","hashOfConfig":"25"},{"size":2365,"mtime":1607676965736,"results":"45","hashOfConfig":"25"},{"size":607,"mtime":1607676965748,"results":"46","hashOfConfig":"25"},{"size":2167,"mtime":1607676965772,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"tp7qlt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/safchug/WebstormProjects/react-cities-project/src/index.js",[],["103","104"],"/home/safchug/WebstormProjects/react-cities-project/src/App.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login.js",["105","106","107"],"import { Button, Col, Form, Input, Row } from \"antd\";\nimport { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useHistory } from \"react-router-dom\";\n\nimport StoreContext from \"../../store/StoreContext\";\nimport LoginFrom from \"../../Components/UI/LoginForm\";\n\nconst Login = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  const history = useHistory();\n\n  const submit = (e) => {\n    auth.login(e);\n  };\n\n  const goHome = () => {\n    console.log(\"go home has been called\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"login\">\n      <Row justify=\"center\" align=\"middle\">\n        <Col span=\"8\">\n          {auth.loginStatus === \"pending\" ? (\n            <LoginFrom submit={submit} />\n          ) : (\n            goHome()\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\nexport default Login;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/store/AuthService.js",["108"],"import {\n  makeObservable,\n  observable,\n  computed,\n  action,\n  runInAction,\n} from \"mobx\";\n\nimport axiosInstance from \"../utils/AxiosInstance\";\n\nclass AuthService {\n  registrationStatus = \"pending\"; // \"pending\", \"done\" or \"error\"\n  registrationResult = null;\n\n  loginStatus = \"pending\";\n  loginError = null;\n  user = null;\n\n  constructor() {\n    makeObservable(this, {\n      registrationStatus: observable,\n      registrationResult: observable,\n      register: action,\n\n      loginStatus: observable,\n      loginError: observable,\n      user: observable,\n      login: action,\n\n      checkUser: action,\n\n      logOut: action,\n    });\n  }\n\n  async register(data) {\n    try {\n      const response = await axiosInstance({\n        method: \"post\",\n        url: \"/registration\",\n        data,\n      });\n\n      runInAction(() => {\n        this.registrationStatus = \"done\";\n        this.registrationResult = response;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.registrationStatus = \"error\";\n        this.registrationResult = err;\n      });\n    }\n  }\n\n  async login(data) {\n    try {\n      const response = await axiosInstance({\n        method: \"post\",\n        url: \"/login\",\n        data,\n      });\n      const token = response.data.accessToken;\n      const { user } = response.data;\n\n      localStorage.setItem(\"accs_tkn\", token);\n\n      runInAction(() => {\n        this.loginStatus = \"done\";\n        this.user = user;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.loginStatus = \"error\";\n        this.loginError = err;\n      });\n    }\n  }\n\n  async checkUser() {\n    try {\n      const token = localStorage.getItem(\"accs_tkn\");\n      if (token) {\n        console.log(\"token exists\");\n        const response = await axiosInstance({\n          method: \"post\",\n          url: \"/auth\",\n          headers: { Authorization: `Bearer ${token}` },\n          body: {},\n        });\n\n        runInAction(() => {\n          this.user = response.data;\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (err) {\n      localStorage.removeItem(\"accs_tkn\");\n      runInAction(() => {\n        this.user = null;\n      });\n    }\n  }\n\n  logOut() {\n    this.loginStatus = \"pending\";\n    this.user = null;\n    localStorage.removeItem(\"accs_tkn\");\n  }\n}\n\nexport default AuthService;\n","/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/utils/AxiosInstance.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/models/User.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/LoginForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/CustomAlert.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/RegistrationForm.js",["109"],"import { useState } from \"react\";\nimport { Button, Col, Form, Input, Row } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport validation from \"./validation\";\nimport CustomAlert from \"../CustomAlert\";\n\nconst RegistrationFrom = ({ submit, error }) => {\n  const [fullName, setFullName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n\n  const changeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const changeMail = (e) => {\n    setMail(e.target.value);\n  };\n\n  const changeBirthday = (e) => {\n    setBirthday(e.target.value);\n  };\n\n  const changePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  const changeConfirm = (e) => {\n    setConfirm(e.target.value);\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const processError = () => {\n    let responseMsg = \"Something went wrong\";\n\n    if (error.response) {\n      responseMsg = error.response.data.message;\n    }\n\n    return <CustomAlert type=\"error\" message={responseMsg} />;\n  };\n\n  return (\n    <Form onFinish={submit} {...layout}>\n      {error && processError()}\n\n      <Form.Item name=\"name\" label=\"Full name\" rules={validation.name}>\n        <Input value={fullName} onChange={changeName} />\n      </Form.Item>\n      <Form.Item name=\"birthday\" label=\"Birthday\" rules={validation.birthday}>\n        <Input value={birthday} onChange={changeBirthday} />\n      </Form.Item>\n      <Form.Item name=\"mail\" label=\"E-mail\" rules={validation.mail}>\n        <Input value={mail} onChange={changeMail} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={validation.password}\n        hasFeedback\n      >\n        <Input.Password value={password} onChange={changePassword} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={validation.confirm}\n      >\n        <Input.Password value={confirm} onChange={changeConfirm} />\n      </Form.Item>\n\n      <Row justify=\"end\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Row>\n    </Form>\n  );\n};\n\nRegistrationFrom.propTypes = {\n  submit: PropTypes.func.isRequired,\n  error: PropTypes.object,\n};\n\nexport default RegistrationFrom;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/RegistrationForm/validation.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js",["110","111"],"import { observer } from \"mobx-react-lite\";\nimport { Layout, Menu } from \"antd\";\n\nimport CustomMenu from \"./CustomMenu\";\n\nconst { Header } = Layout;\n\nconst TopNavigation = () => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <CustomMenu />\n      </Header>\n    </Layout>\n  );\n};\n\nexport default TopNavigation;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js",["112"],"import { Menu } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext, useEffect, Fragment } from \"react\";\nimport StoreContext from \"../../store/StoreContext\";\n\nconst CustomMenu = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  useEffect(() => {\n    auth.checkUser();\n  }, []);\n\n  const logOut = (e) => {\n    auth.logOut();\n  };\n\n  return (\n    <Menu mode=\"horizontal\" theme=\"dark\">\n      <Menu.Item key=\"logo\">\n        <NavLink exact to=\"/\">\n          Cities Service\n        </NavLink>\n      </Menu.Item>\n      {auth.user ? (\n        <Fragment>\n          <Menu.Item key=\"logout\" className=\"menu_right\" onClick={logOut}>\n            Log out\n          </Menu.Item>\n          <Menu.Item key=\"user\" className=\"menu_right\">\n            {auth.user.name}\n          </Menu.Item>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Menu.Item key=\"login\" className=\"menu_right\">\n            <NavLink exact to=\"/login\">\n              Log in\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"logout\" className=\"menu_right\">\n            <NavLink exact to=\"/registration\">\n              Sign in\n            </NavLink>\n          </Menu.Item>\n        </Fragment>\n      )}\n    </Menu>\n  );\n});\n\nexport default CustomMenu;\n","/home/safchug/WebstormProjects/react-cities-project/src/store/CitiesService.js",["113"],"import { action, makeObservable, observable, runInAction } from \"mobx\";\n\nimport axiosInstance from \"../utils/AxiosInstance\";\n\nclass CitiesService {\n  citiesList = null;\n  loading = false;\n  CitiesListError = null;\n  city = null;\n  cityError = null;\n  deleteCitySuccess = false;\n  deleteCityError = null;\n\n  constructor() {\n    makeObservable(this, {\n      citiesList: observable,\n      loading: observable,\n      CitiesListError: observable,\n      fetchCitiesList: action,\n\n      city: observable,\n      fetchCityById: action,\n\n      deleteCitySuccess: observable,\n      deleteCityError: observable,\n      deleteCity: action,\n      clearDeletingState: action,\n    });\n  }\n\n  async fetchCitiesList(query) {\n    try {\n      console.log(\"loading true\");\n      runInAction(() => {\n        this.loading = true;\n      });\n\n      const addquery = query ? `?query=${query}` : \"\";\n\n      const response = await axiosInstance({\n        method: \"get\",\n        url: `/cities${addquery}`,\n      });\n\n      runInAction(() => {\n        console.log(\"loading false\");\n        this.loading = false;\n        this.citiesList = response.data;\n      });\n    } catch (err) {\n      runInAction(() => {\n        console.log(\"error\");\n        this.loading = false;\n        this.CitiesListError = err;\n      });\n    }\n  }\n\n  async fetchCityById(id) {\n    try {\n      const response = await axiosInstance({\n        method: \"get\",\n        url: `/cities/${id}`,\n      });\n      runInAction(() => {\n        this.city = response.data;\n      });\n    } catch (err) {\n      this.cityError = err;\n    }\n  }\n\n  async deleteCity(id) {\n    try {\n      const token = localStorage.getItem(\"accs_tkn\");\n      if (!token) throw new Error(\"User is not authorized\");\n\n      const response = await axiosInstance({\n        method: \"delete\",\n        url: `cities/${id}`,\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      runInAction(() => {\n        this.deleteCitySuccess = true;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.deleteCitySuccess = false;\n        this.deleteCityError = err;\n      });\n    }\n  }\n\n  clearDeletingState() {\n    this.deleteCityError = null;\n    this.deleteCitySuccess = false;\n  }\n}\n\nexport default CitiesService;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/UI/Loader/Loader.js",[],["114","115"],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCityFrom/AddCityForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js",["116","117","118"],"import { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Col, Card, Row, Typography, Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../../Components/UI/Loader/Loader\";\n\nimport \"./style.css\";\n\nconst CitiesList = observer(() => {\n  const { Text } = Typography;\n\n  const { cities } = useContext(StoreContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    console.log(\"effect\");\n    cities.fetchCitiesList();\n  }, []);\n\n  const showInfo = (id) => {\n    history.push(`/city_info/${id}`);\n  };\n\n  return (\n    <Row gutter={[16, 16]}>\n      {cities.loading ? (\n        <Loader />\n      ) : (\n        cities.citiesList &&\n        cities.citiesList.map((city) => (\n          <Col span={8} className=\"gutter-row\">\n            <Card\n              title={city.name}\n              className=\"city_card\"\n              extra={\n                <Button type=\"primary\" onClick={showInfo.bind(null, city.id)}>\n                  {\" \"}\n                  More\n                </Button>\n              }\n            >\n              <Text mark>Population</Text>\n              {city.population}\n            </Card>\n          </Col>\n        ))\n      )}\n    </Row>\n  );\n});\n\nexport default CitiesList;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js",["119","120"],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCityFrom/UpdateCityForm.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"125","severity":1,"message":"129","line":1,"column":23,"nodeType":"127","messageId":"128","endLine":1,"endColumn":27},{"ruleId":"125","severity":1,"message":"130","line":1,"column":29,"nodeType":"127","messageId":"128","endLine":1,"endColumn":34},{"ruleId":"125","severity":1,"message":"131","line":4,"column":3,"nodeType":"127","messageId":"128","endLine":4,"endColumn":11},{"ruleId":"125","severity":1,"message":"132","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":21},{"ruleId":"125","severity":1,"message":"133","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},{"ruleId":"125","severity":1,"message":"134","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":12,"column":6,"nodeType":"137","endLine":12,"endColumn":8,"suggestions":"138"},{"ruleId":"125","severity":1,"message":"139","line":78,"column":13,"nodeType":"127","messageId":"128","endLine":78,"endColumn":21},{"ruleId":"121","replacedBy":"140"},{"ruleId":"123","replacedBy":"141"},{"ruleId":"125","severity":1,"message":"142","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},{"ruleId":"125","severity":1,"message":"143","line":1,"column":43,"nodeType":"127","messageId":"128","endLine":1,"endColumn":51},{"ruleId":"135","severity":1,"message":"144","line":19,"column":6,"nodeType":"137","endLine":19,"endColumn":8,"suggestions":"145"},{"ruleId":"125","severity":1,"message":"146","line":3,"column":22,"nodeType":"127","messageId":"128","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"147","line":22,"column":6,"nodeType":"137","endLine":22,"endColumn":8,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Input' is defined but never used.","'computed' is defined but never used.","'Col' is defined but never used.","'observer' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'response' is assigned a value but never used.",["149"],["150"],"'Fragment' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.",["152"],"'Space' is defined but never used.","React Hook useEffect has missing dependencies: 'cities' and 'id'. Either include them or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [auth]",{"range":"160","text":"161"},"Update the dependencies array to be: [cities]",{"range":"162","text":"163"},"Update the dependencies array to be: [cities, id]",{"range":"164","text":"165"},[357,359],"[auth]",[584,586],"[cities]",[598,600],"[cities, id]"]