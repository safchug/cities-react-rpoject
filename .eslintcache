[{"/home/safchug/WebstormProjects/react-cities-project/src/index.js":"1","/home/safchug/WebstormProjects/react-cities-project/src/App.js":"2","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js":"3","/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js":"4","/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js":"5","/home/safchug/WebstormProjects/react-cities-project/src/models/User.js":"6","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js":"7","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js":"8","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js":"9","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js":"10","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js":"11","/home/safchug/WebstormProjects/react-cities-project/src/models/City.js":"12","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/Registration.js":"13","/home/safchug/WebstormProjects/react-cities-project/src/Components/Loader/Loader.js":"14","/home/safchug/WebstormProjects/react-cities-project/src/Components/Layouts/CityForm/CityFormLayout.js":"15","/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/SubmitButton/Button.js":"16","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/RegistrationForm/RegistrationForm.js":"17","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/RegistrationForm/validation.js":"18","/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/FormItem/FormItem.js":"19","/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/Wrapper/Form.js":"20","/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/FormItemPassword/FromItemPassword.js":"21","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/Login.js":"22","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/LoginForm/validation.js":"23","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCity/AddCity.js":"24","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/LoginForm/LoginForm.js":"25","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCity/AddCityForm/AddCityForm.js":"26","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCity/UpdateCity.js":"27","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCity/UpdateCityForm/UpdateCityForm.js":"28","/home/safchug/WebstormProjects/react-cities-project/src/Components/Alert/Alert.js":"29","/home/safchug/WebstormProjects/react-cities-project/src/store/Cities.js":"30","/home/safchug/WebstormProjects/react-cities-project/src/store/Auth.js":"31","/home/safchug/WebstormProjects/react-cities-project/src/services/api/axiosInstance.js":"32","/home/safchug/WebstormProjects/react-cities-project/src/services/api/api.js":"33"},{"size":197,"mtime":1607422242320,"results":"34","hashOfConfig":"35"},{"size":896,"mtime":1608033486673,"results":"36","hashOfConfig":"35"},{"size":603,"mtime":1607676335012,"results":"37","hashOfConfig":"35"},{"size":847,"mtime":1608028886634,"results":"38","hashOfConfig":"35"},{"size":108,"mtime":1607543483968,"results":"39","hashOfConfig":"35"},{"size":206,"mtime":1607544057413,"results":"40","hashOfConfig":"35"},{"size":330,"mtime":1607608072420,"results":"41","hashOfConfig":"35"},{"size":1322,"mtime":1607621755933,"results":"42","hashOfConfig":"35"},{"size":1321,"mtime":1608025702934,"results":"43","hashOfConfig":"35"},{"size":2371,"mtime":1607696959125,"results":"44","hashOfConfig":"35"},{"size":607,"mtime":1607676965748,"results":"45","hashOfConfig":"35"},{"size":299,"mtime":1607697123787,"results":"46","hashOfConfig":"35"},{"size":1196,"mtime":1608029147281,"results":"47","hashOfConfig":"35"},{"size":306,"mtime":1607622713731,"results":"48","hashOfConfig":"35"},{"size":205,"mtime":1607685887876,"results":"49","hashOfConfig":"35"},{"size":219,"mtime":1608026491031,"results":"50","hashOfConfig":"35"},{"size":931,"mtime":1608027652639,"results":"51","hashOfConfig":"35"},{"size":914,"mtime":1607593476901,"results":"52","hashOfConfig":"35"},{"size":196,"mtime":1608060481803,"results":"53","hashOfConfig":"35"},{"size":281,"mtime":1608027652459,"results":"54","hashOfConfig":"35"},{"size":221,"mtime":1608060481811,"results":"55","hashOfConfig":"35"},{"size":860,"mtime":1608028097501,"results":"56","hashOfConfig":"35"},{"size":329,"mtime":1608027652699,"results":"57","hashOfConfig":"35"},{"size":1095,"mtime":1608060482083,"results":"58","hashOfConfig":"35"},{"size":656,"mtime":1608032717716,"results":"59","hashOfConfig":"35"},{"size":582,"mtime":1608032908854,"results":"60","hashOfConfig":"35"},{"size":614,"mtime":1608060482191,"results":"61","hashOfConfig":"35"},{"size":549,"mtime":1608060482203,"results":"62","hashOfConfig":"35"},{"size":213,"mtime":1608025702926,"results":"63","hashOfConfig":"35"},{"size":3446,"mtime":1608062114377,"results":"64","hashOfConfig":"35"},{"size":2235,"mtime":1608061501712,"results":"65","hashOfConfig":"35"},{"size":243,"mtime":1608060482243,"results":"66","hashOfConfig":"35"},{"size":344,"mtime":1608061501684,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"tp7qlt",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},"/home/safchug/WebstormProjects/react-cities-project/src/index.js",[],["146","147"],"/home/safchug/WebstormProjects/react-cities-project/src/App.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Home.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/config/router.config.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/store/StoreContext.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/models/User.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/TopNavigation.js",["148","149"],"import { observer } from \"mobx-react-lite\";\nimport { Layout, Menu } from \"antd\";\n\nimport CustomMenu from \"./CustomMenu\";\n\nconst { Header } = Layout;\n\nconst TopNavigation = () => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <CustomMenu />\n      </Header>\n    </Layout>\n  );\n};\n\nexport default TopNavigation;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/Menu/CustomMenu.js",["150"],"import { Menu } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { useContext, useEffect, Fragment } from \"react\";\nimport StoreContext from \"../../store/StoreContext\";\n\nconst CustomMenu = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  useEffect(() => {\n    auth.checkUser();\n  }, []);\n\n  const logOut = (e) => {\n    auth.logOut();\n  };\n\n  return (\n    <Menu mode=\"horizontal\" theme=\"dark\">\n      <Menu.Item key=\"logo\">\n        <NavLink exact to=\"/\">\n          Cities Service\n        </NavLink>\n      </Menu.Item>\n      {auth.user ? (\n        <Fragment>\n          <Menu.Item key=\"logout\" className=\"menu_right\" onClick={logOut}>\n            Log out\n          </Menu.Item>\n          <Menu.Item key=\"user\" className=\"menu_right\">\n            {auth.user.name}\n          </Menu.Item>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Menu.Item key=\"login\" className=\"menu_right\">\n            <NavLink exact to=\"/login\">\n              Log in\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"logout\" className=\"menu_right\">\n            <NavLink exact to=\"/registration\">\n              Sign in\n            </NavLink>\n          </Menu.Item>\n        </Fragment>\n      )}\n    </Menu>\n  );\n});\n\nexport default CustomMenu;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CitiesList/CitiesList.js",["151","152","153"],"import { Fragment, useContext, useEffect, useState } from \"react\";\nimport { Col, Card, Row, Typography, Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../../Components/UI/Loader/Loader\";\n\nimport \"./style.css\";\n\nconst CitiesList = observer(() => {\n  const { Text } = Typography;\n\n  const { cities } = useContext(StoreContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    console.log(\"effect\");\n    cities.fetchCitiesList();\n  }, []);\n\n  const showInfo = (id) => {\n    history.push(`/city_info/${id}`);\n  };\n\n  return (\n    <Row gutter={[16, 16]}>\n      {cities.loading ? (\n        <Loader />\n      ) : (\n        cities.citiesList &&\n        cities.citiesList.map((city) => (\n          <Col span={8} className=\"gutter-row\">\n            <Card\n              title={city.name}\n              className=\"city_card\"\n              extra={\n                <Button type=\"primary\" onClick={showInfo.bind(null, city.id)}>\n                  More\n                </Button>\n              }\n            >\n              <Text mark>Population</Text>\n              {city.population}\n            </Card>\n          </Col>\n        ))\n      )}\n    </Row>\n  );\n});\n\nexport default CitiesList;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/CityInfo/CityInfo.js",["154","155"],"import { Fragment, useContext, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Typography, Space, Button, Row, Col, Card } from \"antd\";\nimport { when } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\n\nimport StoreContext from \"../../../store/StoreContext\";\n\nimport \"./style.css\";\n\nconst { Text } = Typography;\n\nconst CityInfo = observer(() => {\n  const { cities, auth } = useContext(StoreContext);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const { city } = cities;\n\n  useEffect(() => {\n    cities.fetchCityById(id);\n  }, []);\n\n  const goHome = () => {\n    history.push(\"/\");\n  };\n\n  const goToUpdateFrom = () => {\n    history.push(`/update_from/${id}`);\n  };\n\n  const deleteCity = () => {\n    cities.deleteCity(id);\n  };\n\n  when(\n    () => cities.deleteCitySuccess,\n    () => {\n      history.push(\"/\");\n      cities.clearDeletingState();\n    }\n  );\n\n  return (\n    <div>\n      {city ? (\n        <Row justify=\"center\">\n          <Card title={city.name} className=\"city_info_card\">\n            <Col span={18}>\n              <Text mark>Location</Text>\n              {city.location}\n            </Col>\n\n            <Col span={18}>\n              <Text mark>Population </Text>\n              {city.population}\n            </Col>\n            <Col span={18}>\n              <Text mark>Area </Text>\n              {city.area}\n            </Col>\n            <Col span={8}>\n              <Text mark>Found </Text>\n              {city.found}\n            </Col>\n            <Col span={8}>\n              <Text mark>Created by:</Text>\n            </Col>\n            <Col span={8}>\n              <Text mark>Name:</Text>\n              {city.user.name}\n            </Col>\n            <Col span={8}>\n              <Text mark>Mail</Text> {city.user.mail}\n            </Col>\n\n            {auth.user && city.userId === auth.user.id && (\n              <Fragment>\n                <Button type=\"primary\" onClick={goToUpdateFrom}>\n                  Update\n                </Button>\n                <Button type=\"primary\" onClick={deleteCity}>\n                  Delete\n                </Button>\n              </Fragment>\n            )}\n            <Button type=\"primary\" onClick={goHome}>\n              Home\n            </Button>\n          </Card>\n        </Row>\n      ) : null}\n    </div>\n  );\n});\n\nexport default CityInfo;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/Search/Search.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/models/City.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/Registration.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Loader/Loader.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Layouts/CityForm/CityFormLayout.js",["156"],"import { Col, Row } from \"antd\";\n\nconst CityFormLayout = ({ children, className }) => (\n  <div className={className}>\n    <Row justify=\"center\">{children}</Row>\n  </div>\n);\n\nexport default CityFormLayout;\n","/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/SubmitButton/Button.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/RegistrationForm/RegistrationForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Registration/RegistrationForm/validation.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/FormItem/FormItem.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/Wrapper/Form.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Form/FormItemPassword/FromItemPassword.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/Login.js",["157","158","159"],"import { Button, Col, Form, Input, Row } from \"antd\";\nimport { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useHistory } from \"react-router-dom\";\n\nimport StoreContext from \"../../../store/StoreContext\";\nimport LoginForm from \"./LoginForm/LoginForm\";\n\nconst Login = observer(() => {\n  const { auth } = useContext(StoreContext);\n\n  const history = useHistory();\n\n  const submit = (e) => {\n    auth.login(e);\n  };\n\n  const goHome = () => {\n    console.log(\"go home has been called\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"login\">\n      <Row justify=\"center\" align=\"middle\">\n        <Col span=\"8\">\n          {auth.loginStatus === \"pending\" ? (\n            <LoginForm submit={submit} />\n          ) : (\n            goHome()\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n});\n\nexport default Login;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/LoginForm/validation.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCity/AddCity.js",["160"],"import { useContext } from \"react\";\n\nimport CityFormLayout from \"../../../Components/Layouts/CityForm/CityFormLayout\";\nimport StoreContext from \"../../../store/StoreContext\";\nimport City from \"../../../models/City\";\nimport CustomAlert from \"../../../Components/Alert/Alert\";\n\nimport { observer } from \"mobx-react-lite\";\n\nimport \"./style.css\";\nimport AddCityForm from \"./AddCityForm/AddCityForm\";\n\nconst AddCity = observer(() => {\n  const { cities } = useContext(StoreContext);\n\n  const submit = (e) => {\n    const city = new City(e.name, e.location, e.population, e.area, e.found);\n\n    cities.addCity(city);\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  return (\n    <CityFormLayout className=\"add_city_from\">\n      {cities.addCityStatus === \"done\" && (\n        <CustomAlert message=\"the city has been added successfuly!\" />\n      )}\n      {cities.addCityStatus === \"error\" && (\n        <CustomAlert message={cities.addCityError} type=\"error\" />\n      )}\n\n      <AddCityForm submit={submit} />\n    </CityFormLayout>\n  );\n});\n\nexport default AddCity;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Auth/Login/LoginForm/LoginForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/AddCity/AddCityForm/AddCityForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCity/UpdateCity.js",["161","162"],"import { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"./style.css\";\n\nimport StoreContext from \"../../../store/StoreContext\";\nimport City from \"../../../models/City\";\n\nimport UpdateCityForm from \"./UpdateCityForm/UpdateCityForm\";\n\nconst UpdateCity = () => {\n  const { cities } = useContext(StoreContext);\n\n  const { id } = useParams();\n\n  const submit = (e) => {\n    const city = new City(e.name, e.location, e.population, e.area, e.found);\n\n    cities.updateCity(id, city);\n  };\n\n  return <UpdateCityForm submit={submit} />;\n};\n\nexport default UpdateCity;\n","/home/safchug/WebstormProjects/react-cities-project/src/Pages/Cities/UpdateCity/UpdateCityForm/UpdateCityForm.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/Components/Alert/Alert.js",["163"],"import { Alert as AntAlert } from \"antd\";\n\n/*\ntypes: success, error, warning, info\n* */\nconst Alert = ({ type = \"info\", message }) => (\n  <Alert message={message} type={type} showIcon />\n);\n\nexport default Alert;\n","/home/safchug/WebstormProjects/react-cities-project/src/store/Cities.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/store/Auth.js",["164"],"import { makeObservable, observable, action, runInAction } from \"mobx\";\n\nimport axiosInstance from \"../services/api/axiosInstance\";\nimport api from \"../services/api/api\";\n\nclass Auth {\n  registrationStatus = \"pending\"; // \"pending\", \"done\" or \"error\"\n  registrationResult = null;\n\n  loginStatus = \"pending\";\n  loginError = null;\n  user = null;\n\n  constructor() {\n    makeObservable(this, {\n      registrationStatus: observable,\n      registrationResult: observable,\n      register: action,\n\n      loginStatus: observable,\n      loginError: observable,\n      user: observable,\n      login: action,\n\n      checkUser: action,\n\n      logOut: action,\n    });\n  }\n\n  async register(data) {\n    try {\n      const response = await api.makeRequest({\n        url: \"/registration\",\n        method: \"post\",\n        data,\n      });\n\n      runInAction(() => {\n        this.registrationStatus = \"done\";\n        this.registrationResult = response;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.registrationStatus = \"error\";\n        this.registrationResult = err;\n      });\n    }\n  }\n\n  async login(data) {\n    try {\n      const response = await api.makeRequest({\n        url: \"/login\",\n        method: \"post\",\n        data,\n      });\n      const token = response.data.accessToken;\n      const { user } = response.data;\n\n      localStorage.setItem(\"accs_tkn\", token);\n\n      runInAction(() => {\n        this.loginStatus = \"done\";\n        this.user = user;\n      });\n    } catch (err) {\n      runInAction(() => {\n        this.loginStatus = \"error\";\n        this.loginError = err;\n      });\n    }\n  }\n\n  async checkUser() {\n    try {\n      const token = localStorage.getItem(\"accs_tkn\");\n      if (token) {\n        const response = api.makeRequest({\n          url: \"/auth\",\n          method: \"post\",\n          token,\n        });\n\n        runInAction(() => {\n          this.user = response.data;\n        });\n      } else {\n        throw new Error();\n      }\n    } catch (err) {\n      localStorage.removeItem(\"accs_tkn\");\n      runInAction(() => {\n        this.user = null;\n      });\n    }\n  }\n\n  logOut() {\n    this.loginStatus = \"pending\";\n    this.user = null;\n    localStorage.removeItem(\"accs_tkn\");\n  }\n}\n\nexport default Auth;\n","/home/safchug/WebstormProjects/react-cities-project/src/services/api/axiosInstance.js",[],"/home/safchug/WebstormProjects/react-cities-project/src/services/api/api.js",["165"],"import axiosInstance from \"./axiosInstance\";\n\nexport default {\n  makeRequest({ url, method, data, query, token }) {\n    const addquery = query ? `?query=${query}` : \"\";\n\n    const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n    return axiosInstance[method](`${url}${addquery}`, data, {\n      headers: headers,\n    });\n  },\n};\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":2,"column":18,"nodeType":"172","messageId":"173","endLine":2,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":12,"column":6,"nodeType":"177","endLine":12,"endColumn":8,"suggestions":"178"},{"ruleId":"170","severity":1,"message":"179","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"180","line":1,"column":43,"nodeType":"172","messageId":"173","endLine":1,"endColumn":51},{"ruleId":"175","severity":1,"message":"181","line":19,"column":6,"nodeType":"177","endLine":19,"endColumn":8,"suggestions":"182"},{"ruleId":"170","severity":1,"message":"183","line":3,"column":22,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"175","severity":1,"message":"184","line":22,"column":6,"nodeType":"177","endLine":22,"endColumn":8,"suggestions":"185"},{"ruleId":"170","severity":1,"message":"186","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"187","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":16},{"ruleId":"170","severity":1,"message":"188","line":1,"column":23,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"189","line":1,"column":29,"nodeType":"172","messageId":"173","endLine":1,"endColumn":34},{"ruleId":"170","severity":1,"message":"190","line":22,"column":9,"nodeType":"172","messageId":"173","endLine":22,"endColumn":15},{"ruleId":"170","severity":1,"message":"180","line":1,"column":22,"nodeType":"172","messageId":"173","endLine":1,"endColumn":30},{"ruleId":"170","severity":1,"message":"191","line":1,"column":32,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"170","severity":1,"message":"192","line":1,"column":19,"nodeType":"172","messageId":"173","endLine":1,"endColumn":27},{"ruleId":"170","severity":1,"message":"193","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":3,"column":1,"nodeType":"196","endLine":13,"endColumn":3},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'observer' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'Fragment' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.",["200"],"'Space' is defined but never used.","React Hook useEffect has missing dependencies: 'cities' and 'id'. Either include them or remove the dependency array.",["201"],"'Col' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'layout' is assigned a value but never used.","'useEffect' is defined but never used.","'AntAlert' is defined but never used.","'axiosInstance' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [auth]",{"range":"208","text":"209"},"Update the dependencies array to be: [cities]",{"range":"210","text":"211"},"Update the dependencies array to be: [cities, id]",{"range":"212","text":"213"},[357,359],"[auth]",[584,586],"[cities]",[598,600],"[cities, id]"]